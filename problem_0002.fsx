// Problem 2 of project Euler : Even Fibonacci Numbers

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with  and , the first terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
// find the sum of the even-valued terms.

open Microsoft.FSharp.Math


let limit: int = 4_000_000

let fib (n: int): float =
    let phi: float = (1.0 + sqrt 5.0) / 2.0
    let psi: float = - 1.0 / phi
    round ((1.0 / sqrt 5.0) * (phi ** n - psi ** n))

let result: float = List.sum [for n in 3..3..33 -> fib n]

printfn "The sum of the even-valued terms of the fibonacci sequence that don't exceed 4 millions is %f" result